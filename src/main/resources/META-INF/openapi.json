{
    "openapi": "3.0.2",
    "info": {
        "title": "Enterprise Flows Repository - Traces",
        "version": "1.0.0",
        "description": "Mediation part for EFR.",
        "contact": {
            "name": "Emmanuel LESNE",
            "url": "https://github.com/EnterpriseFlowsRepository",
            "email": "emmanuel.lesne@middleware-solutions.fr"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/trace": {
            "summary": "Path used to manage the list of traces.",
            "description": "The REST endpoint/path used to list and create zero or more `Trace` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "tags": [
                    "trace"
                ],
                "parameters": [
                    {
                        "name": "after",
                        "description": "Trace after",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "before",
                        "description": "Trace before datetime.",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "keys",
                        "description": "Array of business key names.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trace"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Trace` entities."
                    },
                    "404": {
                        "description": "No Traces found."
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "operationId": "gettraces",
                "summary": "List All traces",
                "description": "Gets a list of all `Trace` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `Trace` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trace"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "trace"
                ],
                "responses": {
                    "201": {
                        "description": "Successful response."
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "operationId": "createTrace",
                "summary": "Create a Trace",
                "description": "Creates a new instance of a `Trace`."
            }
        },
        "/trace/{traceId}": {
            "summary": "Path used to manage a single Trace.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `Trace`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trace"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `Trace`."
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "operationId": "getTrace",
                "summary": "Get a Trace",
                "description": "Gets the details of a single instance of a `Trace`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Trace` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trace"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "trace"
                ],
                "responses": {
                    "202": {
                        "description": "Successful response."
                    },
                    "404": {
                        "description": "Modification on a unknonwed trace."
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "operationId": "updateTrace",
                "summary": "Update a Trace",
                "description": "Updates an existing `Trace`."
            },
            "delete": {
                "tags": [
                    "trace"
                ],
                "responses": {
                    "204": {
                        "description": "Successful response."
                    },
                    "404": {
                        "description": "Delete an unknowned trace."
                    },
                    "500": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "operationId": "deleteTrace",
                "summary": "Delete a Trace",
                "description": "Deletes an existing `Trace`."
            },
            "parameters": [
                {
                    "name": "traceId",
                    "description": "A unique identifier for a `Trace`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Trace": {
                "title": "Root Type for Trace",
                "description": "Trace of a message.",
                "required": [
                    "route",
                    "message",
                    "environnement",
                    "version",
                    "infrastructure"
                ],
                "type": "object",
                "properties": {
                    "version": {
                        "description": "Version of this format.",
                        "type": "integer"
                    },
                    "environnement": {
                        "description": "Name of environement.",
                        "type": "string"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message",
                        "description": "Technical description of message.",
                        "properties": {
                            "created": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "CorrelationID": {
                                "type": "string"
                            },
                            "MessageID": {
                                "type": "string"
                            },
                            "headers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "type": {
                                "type": "string"
                            },
                            "level": {
                                "type": "string"
                            },
                            "body": {
                                "type": "string"
                            }
                        }
                    },
                    "route": {
                        "$ref": "#/components/schemas/Route",
                        "description": "Route used by message.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "step": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "input": {
                                "type": "object",
                                "properties": {
                                    "protocol": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "business": {
                        "description": "Business keys in this message.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Key"
                        }
                    },
                    "origin": {
                        "$ref": "#/components/schemas/Source",
                        "description": "Application origin.",
                        "properties": {
                            "informationSystem": {
                                "type": "string"
                            },
                            "application": {
                                "type": "string"
                            },
                            "hostname": {
                                "type": "string"
                            },
                            "created": {
                                "format": "date-time",
                                "type": "string"
                            }
                        }
                    },
                    "exception": {
                        "$ref": "#/components/schemas/Exception",
                        "description": "Exception occurs ?",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "class": {
                                "type": "string"
                            },
                            "detail": {
                                "type": "string"
                            },
                            "stacktrace": {
                                "type": "string"
                            }
                        }
                    },
                    "infrastructure": {
                        "$ref": "#/components/schemas/Infrastructure",
                        "description": "Infra where route is executed.",
                        "properties": {
                            "hostname": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "version": "1",
                    "environnement": "PROD",
                    "message": {
                        "created": "2019-10-30T12:30:04.123",
                        "CorrelationID": "132-abc-456-def",
                        "MessageID": "abc-123",
                        "headers": [
                            {
                                "name": "HEADER1",
                                "value": "1234EFG"
                            },
                            {
                                "name": "HEADER2",
                                "value": "1234EFG"
                            }
                        ],
                        "type": "error|business|tecnical",
                        "level": "debug|info|warn|error",
                        "body": "..."
                    },
                    "route": {
                        "name": "RouteCamel ABC",
                        "version": "1.2.2",
                        "id": "Camel-ABC-456789",
                        "step": "Input from file abc.txt",
                        "description": "textual description",
                        "input": {
                            "protocol": "file|queue|http",
                            "source": "fileName|queueName"
                        }
                    },
                    "business": [
                        {
                            "key": "ABCD",
                            "class": "Invoice"
                        },
                        {
                            "key": "DFEG",
                            "class": "Invoice"
                        }
                    ],
                    "origin": {
                        "informationSystem": "UP1",
                        "application": "app 1",
                        "hostname": "serverNameABC",
                        "created": "2019-10-30T12:30:04.123"
                    },
                    "exception": {
                        "code": "Parsing-123",
                        "class": "XsltException",
                        "detail": "...",
                        "stacktrace": "..."
                    },
                    "infrastructure": {
                        "hostname": "serverName2"
                    }
                }
            },
            "Key": {
                "title": "Root Type for Key",
                "description": "Key with value.\nAbstract notion for headers, etc.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "HEADER2",
                    "value": "1234EFG"
                }
            },
            "Message": {
                "title": "Root Type for Message",
                "description": "Message description.",
                "required": [
                    "level",
                    "MessageID"
                ],
                "type": "object",
                "properties": {
                    "created": {
                        "format": "date-time",
                        "description": "Date of message creation.",
                        "type": "string"
                    },
                    "CorrelationID": {
                        "description": "ID share during some message.\nID of a travel between Application Source to Application Target.",
                        "type": "string"
                    },
                    "MessageID": {
                        "description": "ID unique of this message.",
                        "type": "string"
                    },
                    "headers": {
                        "description": "Headers of this message.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Key"
                        }
                    },
                    "type": {
                        "description": "Type of this trace.",
                        "enum": [
                            "error",
                            "business",
                            "technical"
                        ],
                        "type": "string"
                    },
                    "level": {
                        "description": "Level of this trace.",
                        "enum": [
                            "fatal",
                            "error",
                            "warn",
                            "info"
                        ],
                        "type": "string"
                    },
                    "body": {
                        "description": "Body of message.",
                        "type": "string"
                    }
                },
                "example": {
                    "created": "2019-10-30T12:30:04.123",
                    "CorrelationID": "132-abc-456-def",
                    "MessageID": "abc-123",
                    "headers": [
                        {
                            "name": "HEADER1",
                            "value": "1234EFG"
                        },
                        {
                            "name": "HEADER2",
                            "value": "1234EFG"
                        }
                    ],
                    "type": "error|business|tecnical",
                    "level": "debug|info|warn|error",
                    "body": "..."
                }
            },
            "Source": {
                "title": "Root Type for Source",
                "description": "source for Input or Output.",
                "type": "object",
                "properties": {
                    "protocol": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "example": {
                    "protocol": "file|queue|http",
                    "source": "fileName|queueName"
                }
            },
            "Route": {
                "title": "Root Type for Route",
                "description": "Route used by the message.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of route.",
                        "type": "string"
                    },
                    "version": {
                        "description": "Version of route.",
                        "type": "string"
                    },
                    "id": {
                        "description": "ID of route.",
                        "type": "string"
                    },
                    "step": {
                        "description": "Step DURIG thie route.",
                        "type": "string"
                    },
                    "description": {
                        "description": "Textual description of route.",
                        "type": "string"
                    },
                    "input": {
                        "$ref": "#/components/schemas/Source",
                        "description": "Input of this route."
                    },
                    "output": {
                        "$ref": "#/components/schemas/Source",
                        "description": "Output of this route."
                    }
                },
                "example": {
                    "name": "RouteCamel ABC",
                    "version": "1.2.2",
                    "id": "Camel-ABC-456789",
                    "step": "Input from file abc.txt",
                    "description": "textual description",
                    "input": {
                        "protocol": "file|queue|http",
                        "source": "fileName|queueName"
                    }
                }
            },
            "Application": {
                "title": "Root Type for Application",
                "description": "Origin or Target application of this message.",
                "type": "object",
                "properties": {
                    "informationSystem": {
                        "type": "string"
                    },
                    "application": {
                        "description": "Name of application.",
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "Creation date of send.",
                        "type": "string"
                    }
                },
                "example": {
                    "informationSystem": "UP1",
                    "application": "app 1",
                    "hostname": "serverNameABC",
                    "created": "2019-10-30T12:30:04.123"
                }
            },
            "Exception": {
                "title": "Root Type for Exception",
                "description": "Exception occurs during transport.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Unique code for this exception.",
                        "type": "string"
                    },
                    "class": {
                        "description": "Class name.",
                        "type": "string"
                    },
                    "detail": {
                        "description": "A short text details.",
                        "type": "string"
                    },
                    "stacktrace": {
                        "description": "complete stacktrace of this exception.",
                        "type": "string"
                    }
                },
                "example": {
                    "code": "Parsing-123",
                    "class": "javax.xml.XsltException",
                    "detail": "Juste a line",
                    "stacktrace": "Multi lines \n lines \n etc."
                }
            },
            "Infrastructure": {
                "title": "Root Type for Infrastructure",
                "description": "Infrastructure where transport is executed.",
                "type": "object",
                "properties": {
                    "hostname": {
                        "description": "host of server.",
                        "type": "string"
                    }
                },
                "example": {
                    "hostname": "serverName2"
                }
            },
            "Error": {
                "title": "Root Type for Error",
                "description": "Generic error.",
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Code of this error: AAAA-0000",
                        "type": "string"
                    },
                    "description": {
                        "description": "Textual description.",
                        "type": "string"
                    },
                    "details": {
                        "description": "Complete stacktrace or long text to technical details.",
                        "type": "string"
                    },
                    "origin": {
                        "description": "EL path of this error.",
                        "type": "string"
                    }
                },
                "example": {
                    "code": "INFRA-123",
                    "description": "attribute ABC is not acceptable.",
                    "details": "bla bla \n bla bla \n bla bla \n",
                    "origin": "server.1.tag.2.name"
                }
            }
        },
        "responses": {
            "Error": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "sample error": {
                                "value": {
                                    "code": "INFRA-123",
                                    "description": "attribute ABC is not acceptable.",
                                    "details": "bla bla \n bla bla \n bla bla \n",
                                    "origin": "server.1.tag.2.name"
                                }
                            }
                        }
                    }
                },
                "description": "Error during request management."
            }
        }
    },
    "tags": [
        {
            "name": "trace",
            "description": "Trace of a message transport."
        }
    ]
}